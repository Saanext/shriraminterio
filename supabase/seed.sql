
-- Create the appointments table
CREATE TABLE IF NOT EXISTS appointments (
    id bigint PRIMARY KEY generated by default as identity,
    created_at timestamp with time zone not null default now(),
    name text not null,
    email text not null,
    phone text not null,
    appointment_date date not null,
    time_slot text,
    purpose text,
    floorplan text,
    message text
);

-- Create the quotes table
CREATE TABLE IF NOT EXISTS quotes (
    id bigint PRIMARY KEY generated by default as identity,
    created_at timestamp with time zone not null default now(),
    name text not null,
    email text not null,
    phone text not null,
    floorplan text,
    purpose text,
    message text
);

-- Create the products table
CREATE TABLE IF NOT EXISTS products (
    id bigint PRIMARY KEY generated by default as identity,
    created_at timestamp with time zone not null default now(),
    name text not null,
    slug text not null unique,
    short_description text,
    long_description text,
    main_image text,
    features text[],
    gallery text[],
    amazon_link text
);

-- Create the stories table
CREATE TABLE IF NOT EXISTS stories (
    id bigint PRIMARY KEY generated by default as identity,
    created_at timestamp with time zone not null default now(),
    slug text not null unique,
    title text not null,
    image text,
    "dataAiHint" text,
    category text,
    excerpt text,
    author text,
    "authorAvatar" text,
    date date,
    "clientImage" text,
    location text,
    project text,
    size text,
    quote text,
    content text,
    gallery jsonb
);


-- Set up Row Level Security (RLS)
ALTER TABLE appointments ENABLE ROW LEVEL SECURITY;
ALTER TABLE quotes ENABLE ROW LEVEL SECURITY;
ALTER TABLE products ENABLE ROW LEVEL SECURITY;
ALTER TABLE stories ENABLE ROW LEVEL SECURITY;

-- Policies for appointments
DROP POLICY IF EXISTS "Public can insert appointments" ON appointments;
CREATE POLICY "Public can insert appointments" ON appointments FOR INSERT WITH CHECK (true);
DROP POLICY IF EXISTS "Admin can access all appointments" ON appointments;
CREATE POLICY "Admin can access all appointments" ON appointments FOR ALL USING (auth.role() = 'service_role');

-- Policies for quotes
DROP POLICY IF EXISTS "Public can insert quotes" ON quotes;
CREATE POLICY "Public can insert quotes" ON quotes FOR INSERT WITH CHECK (true);
DROP POLICY IF EXISTS "Admin can access all quotes" ON quotes;
CREATE POLICY "Admin can access all quotes" ON quotes FOR ALL USING (auth.role() = 'service_role');

-- Policies for products
DROP POLICY IF EXISTS "Products are viewable by everyone" ON products;
CREATE POLICY "Products are viewable by everyone" ON products FOR SELECT USING (true);
DROP POLICY IF EXISTS "Admin can manage products" ON products;
CREATE POLICY "Admin can manage products" ON products FOR ALL USING (auth.role() = 'service_role');

-- Policies for stories
DROP POLICY IF EXISTS "Stories are viewable by everyone" ON stories;
CREATE POLICY "Stories are viewable by everyone" ON stories FOR SELECT USING (true);
DROP POLICY IF EXISTS "Admin can manage stories" ON stories;
CREATE POLICY "Admin can manage stories" ON stories FOR ALL USING (auth.role() = 'service_role');
